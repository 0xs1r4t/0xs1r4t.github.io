{"version":3,"sources":["assets/fonts/avara.woff","assets/fonts/avara.woff2","theme/themeConfig.js","components/Links.js","components/Content.js","components/Credits.js","assets/new-website/who-dis.gif","assets/theme-switcher/light-theme-heart.gif","assets/theme-switcher/dark-theme-heart.gif","components/Images.js","App.js","reportWebVitals.js","index.js"],"names":["lightTheme","background","color","heartToggle","whoDis","selection","link","underline","shadow","darkTheme","GlobalStyle","createGlobalStyle","avaraWoff2","avaraWoff","theme","StyledA","styled","a","StyledCreds","CreditLink","name","href","target","rel","alt","Link","StyledWrapper","div","WrapName","span","Content","StyledCredits","Credits","StyledImg","img","WebGif","src","width","StyledToggle","LightHeartToggle","lightHeart","DarkHeartToggle","darkHeart","Button","FixToggle","Styles","main","App","useState","setTheme","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0eab36b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avara.ebb7cb3e.woff\";","export default __webpack_public_path__ + \"static/media/avara.7eaf9527.woff2\";","import { createGlobalStyle } from \"styled-components\";\n\n// fonts\nimport avaraWoff from \"../assets/fonts/avara.woff\";\nimport avaraWoff2 from \"../assets/fonts/avara.woff2\";\n\nexport const lightTheme = {\n    background: \"var(--white)\",\n    color: \"var(--black)\",\n    heartToggle: \"../assets/theme-switcher/dark-theme-heart.gif\",\n    whoDis: \"../assets/new-website/light-theme.gif\",\n    selection: \"var(--transparentPink)\",\n    link: {\n        color: \"var(--purple)\",\n        underline: \"var(--pink)\",\n        background: \"var(--transparentPink)\",\n        shadow: \"var(--purple)\",\n    },\n};\n\nexport const darkTheme = {\n    background: \"var(--black)\",\n    color: \"var(--white)\",\n    heartToggle: \"../assets/theme-switcher/light-theme-heart.gif\",\n    whoDis: \"../assets/new-website/dark-theme.gif\",\n    selection: \"var(--transparentPurple)\",\n    link: {\n        color: \"var(--pink)\",\n        underline: \"var(--purple)\",\n        background: \"var(--transparentPurple)\",\n        shadow: \"var(--pink)\",\n    },\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: \"Avara\";\n    src: url(${avaraWoff2}) format(\"woff2\"),\n        url(${avaraWoff}) format(\"woff\");\n    font-style: normal;\n    font-weight: normal;\n    display: swap;\n  }\n\n    * {\n      --black: #0F0F0F;\n      --white: #F0F0F0;\n      --pink: #E838FF;\n      --purple: #6F38FF;\n      --transparentPink: #E838FF90;\n      --transparentPurple: #6F38FF85;\n    }\n\n    html {\n        margin: 0;\n        padding: 0;\n        height: 100%\n    }\n\n    body {\n        display: flex;\n\t      flex-direction: column;\n  \t    align-items: center;\n  \t    justify-content: center;\n        height: 100vh;\n        max-width: 100vw;\n\n  \t    text-align: center;\n        font-family: \"Avara\", serif;\n  \t    background: ${({ theme }) => theme.background};\n        color: ${({ theme }) => theme.color};\n        transition: all 0.25s linear;\n    }\n\n    a {\n      text-decoration: none;\n    }\n\n    ::selection {\n      background-color: ${({ theme }) => theme.selection};\n      color: ${({ theme }) => theme.color};\n    }\n\n    ::-moz-selection {\n      background-color: ${({ theme }) => theme.selection};\n      color: ${({ theme }) => theme.color};\n    }\n\n    @media screen and (max-width: 600px) {\n        img {\n          width: 95vw;\n        }\n    }\n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\n\nconst StyledA = styled.a`\n    color: ${({ theme }) => theme.link.color};\n\n    box-shadow: inset 0 -0.15em 0 ${({ theme }) => theme.link.underline};\n    transition: all 0.25s;\n\n    :hover {\n        color: ${({ theme }) => theme.color};\n        box-shadow: inset 0 -1.35em 0 ${({ theme }) => theme.link.background};\n        border-bottom: 0px;\n    }\n`;\n\nconst Link = ({ link, name }) => {\n    return (\n        <StyledA href={link} target=\"_blank\" rel=\"noopener noreferrer\" alt={name}>\n            {name}\n        </StyledA>\n    );\n};\n\nconst StyledCreds = styled.a`\n    color: ${({ theme }) => theme.color};\n    transition: all 0.25s linear;\n    text-decoration: none;\n`;\n\nexport const CreditLink = ({ link, name }) => {\n    return (\n        <StyledCreds href={link} target=\"_blank\" rel=\"noopenner noreferrer\" alt={name}>\n            {name}\n        </StyledCreds>\n    );\n};\n\nexport default Link;\n","import Link from \"./Links\";\nimport styled from \"styled-components\";\n// useSound -\n// import useSound from \"use-sound\";\n// import boopSfx from \"../../sounds/boop.mp3\";\n\nconst StyledWrapper = styled.div`\n    text-align: justify;\n    word-break: break-word;\n    color: ${({ theme }) => theme.color};\n    font-size: 1.75em;\n    letter-spacing: 0.05em;\n    max-width: 525px;\n    padding: 1em 1em 0 1em;\n`;\n\nconst WrapName = styled.span`\n    font-style: italic;\n    background: ${({ theme }) => theme.link.background};\n`;\n\nconst Content = () => {\n    return (\n        <StyledWrapper>\n            hey there! i am <WrapName>Sirat Baweja</WrapName> and i like creating things with code.\n            find me on <Link link=\"https://sirat.xyz/\" name=\"sirat.xyz\" /> which is coming real\n            soon! or you can just check out my{\" \"}\n            <Link link=\"https://github.com/sBx99/\" name=\"github\" /> or{\" \"}\n            <Link link=\"https://linkedin.com/in/siratbaweja/\" name=\"linkedin\" />\n        </StyledWrapper>\n    );\n};\n\nexport default Content;\n","// Type by [Raphaël Bastide](https://raphaelbastide.com/avara/) - [@velvetype](https://twitter.com/velvetype)\n// By Raphaël Bastide and some contributions by Wei Huang + Lucas Le Bihan + Walid Bouchouchi + Jérémy Landes!\n\nimport styled from \"styled-components\";\nimport { CreditLink } from \"./Links\";\n\nconst StyledCredits = styled.div`\n    position: fixed;\n    bottom: 1.5em;\n    right: 1.5em;\n    padding: 0.75em;\n    z-index: 10;\n\n    font-size: 0.75em;\n    border: 1px solid ${({ theme }) => theme.color};\n    border-radius: 10px;\n\n    max-width: 200px;\n    word-break: break-word;\n    letter-spacing: 0.05em;\n\n    :hover,\n    :active {\n        background: ${({ theme }) => theme.link.background};\n    }\n\n    @media (max-width: 768px) {\n        font-size: 0.5em;\n    }\n`;\n\nconst Credits = () => {\n    return (\n        <StyledCredits>\n            Type by{\" \"}\n            <CreditLink link=\"https://raphaelbastide.com/avara/\" name=\"Raphaël Bastide's website\">\n                Raphaël Bastide\n            </CreditLink>{\" \"}\n            and{\" \"}\n            <CreditLink\n                link=\"https://velvetyne.fr/fonts/avara\"\n                name=\"contributers to Avara from VTF\">\n                Wei Huang + Lucas Le Bihan + Walid Bouchouchi + Jérémy Landes\n            </CreditLink>{\" \"}\n            of the{\" \"}\n            <CreditLink link=\"https://velvetyne.fr/\" name=\"VTF\">\n                Velvetyne Type Foundary\n            </CreditLink>\n        </StyledCredits>\n    );\n};\n\nexport default Credits;\n","export default __webpack_public_path__ + \"static/media/who-dis.73009366.gif\";","export default __webpack_public_path__ + \"static/media/light-theme-heart.a1adda34.gif\";","export default __webpack_public_path__ + \"static/media/dark-theme-heart.a4e5896e.gif\";","import whoDis from \"../assets/new-website/who-dis.gif\";\nimport lightHeart from \"../assets/theme-switcher/light-theme-heart.gif\";\nimport darkHeart from \"../assets/theme-switcher/dark-theme-heart.gif\";\n\nimport styled from \"styled-components\";\n\n// image styling\nconst StyledImg = styled.img`\n    filter: drop-shadow(0 0 10px ${({ theme }) => theme.link.shadow});\n`;\n\nexport const WebGif = () => {\n    return <StyledImg src={whoDis} alt=\"new website who dis\" width=\"500px\" />;\n};\n\n// image styling\nconst StyledToggle = styled.img`\n    filter: drop-shadow(0 0 0.75vw ${({ theme }) => theme.link.shadow});\n    width: 12.5vw;\n\n    @media (max-width: 768px) {\n        filter: drop-shadow(0 0 1.25vw ${({ theme }) => theme.link.shadow});\n        width: 15vw;\n    }\n`;\n\nexport const LightHeartToggle = () => {\n    return <StyledToggle src={lightHeart} alt=\"a gif of a white rotating heart\" width=\"100px\" />;\n};\n\nexport const DarkHeartToggle = () => {\n    return <StyledToggle src={darkHeart} alt=\"a gif of a black rotating heart\" width=\"100px\" />;\n};\n","// light - dark theme toggle -> https://css-tricks.com/a-dark-mode-toggle-with-react-and-themeprovider/\n\n// assets\nimport React, { useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\n\nimport GlobalStyle, { lightTheme, darkTheme } from \"./theme/themeConfig\";\nimport Content from \"./components/Content\";\nimport Credits from \"./components/Credits\";\nimport { WebGif, LightHeartToggle, DarkHeartToggle } from \"./components/Images\";\n\n// Button\nconst Button = styled.div`\n    border: 1px solid rgba(0, 0, 0, 0);\n`;\n\n// fixed toggle\nconst FixToggle = styled.div`\n    position: fixed;\n    top: 1em;\n    left: 1em;\n    z-index: 10;\n`;\n\n// const styling\nconst Styles = styled.main`\n    @media (max-width: 768px) {\n        font-size: 0.75em;\n    }\n\n    @media (max-width: 500px) {\n        font-size: 0.5em;\n    }\n`;\n\n// App\nconst App = () => {\n    const [theme, setTheme] = useState(\"dark\");\n\n    const toggleTheme = () => {\n        theme === \"dark\" ? setTheme(\"light\") : setTheme(\"dark\");\n    };\n\n    return (\n        <ThemeProvider theme={theme === \"dark\" ? darkTheme : lightTheme}>\n            <GlobalStyle />\n            <FixToggle>\n                <Button onClick={toggleTheme}>\n                    {theme === \"dark\" ? <LightHeartToggle /> : <DarkHeartToggle />}\n                </Button>\n            </FixToggle>\n            <Styles>\n                <WebGif />\n                <Content />\n            </Styles>\n            <Credits />\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}