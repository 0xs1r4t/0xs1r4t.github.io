{"version":3,"sources":["assets/fonts/avara.woff","assets/fonts/avara.woff2","theme/themeConfig.js","components/Link.js","components/Content.js","assets/new-website/who-dis.gif","assets/theme-switcher/light-theme-heart.gif","assets/theme-switcher/dark-theme-heart.gif","components/Images.js","App.js","reportWebVitals.js","index.js"],"names":["lightTheme","background","textColor","heartToggle","whoDis","darkTheme","GlobalStyle","createGlobalStyle","avaraWoff2","avaraWoff","theme","StyledA","styled","a","Link","link","name","href","target","rel","alt","Wrapper","div","Content","StyledImg","img","GifToggle","src","StyledToggle","LightHeartToggle","lightHeart","width","DarkHeartToggle","darkHeart","Button","FixToggle","App","useState","setTheme","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,MAA0B,mCCA1B,MAA0B,oC,6tCCMlC,IAAMA,EAAa,CACtBC,WAAY,UACZC,UAAW,UACXC,YAAa,gDACbC,OAAQ,yCAGCC,EAAY,CACrBJ,WAAY,UACZC,UAAW,UACXC,YAAa,iDACbC,OAAQ,wCA6DGE,EA1DKC,YAAH,IAGFC,EACDC,GA8BO,qBAAGC,MAAkBT,cACzB,qBAAGS,MAAkBR,aAMvB,qBAAGQ,MAAkBR,aAMrB,qBAAGQ,MAAkBR,a,kXCjEpC,IAAMS,EAAUC,IAAOC,EAAV,KA4BEC,EAZF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAClB,OACI,cAACL,EAAD,CACIM,KAAMF,EACNG,OAAO,SACPC,IAAI,sBACJC,IAAKJ,EAJT,SAKKA,K,gSCnBb,IAAMK,EAAUT,IAAOU,IAAV,KAuBEC,EAVC,WACZ,OACI,eAACF,EAAD,yBACe,cAAC,EAAD,CAAMN,KAAK,qBAAqBC,KAAK,cADpD,0DAEqC,cAAC,EAAD,CAAMD,KAAK,4BAA4BC,KAAK,WAAY,IAF7F,MAGO,cAAC,EAAD,CAAMD,KAAK,uCAAuCC,KAAK,iBCxBvD,MAA0B,oCCA1B,MAA0B,8CCA1B,MAA0B,6C,qQCOzC,IAAMQ,EAAYZ,IAAOa,IAAV,KAIFC,EAAY,WACrB,OAAO,cAACF,EAAD,CAAWG,IAAKvB,EAAQgB,IAAI,yBAIjCQ,EAAehB,IAAOa,IAAV,KAKLI,EAAmB,WAC5B,OAAO,cAACD,EAAD,CAAcD,IAAKG,EAAYV,IAAI,kCAAkCW,MAAM,WAGzEC,EAAkB,WAC3B,OAAO,cAACJ,EAAD,CAAcD,IAAKM,EAAWb,IAAI,kCAAkCW,MAAM,W,8PCfrF,IAAMG,EAAStB,IAAOU,IAAV,KAKNa,EAAYvB,IAAOU,IAAV,KA6BAc,EArBH,WAAO,IAAD,EACYC,mBAAS,QADrB,mBACP3B,EADO,KACA4B,EADA,KAOd,OACI,eAAC,IAAD,CAAe5B,MAAiB,SAAVA,EAAmBL,EAAYL,EAArD,UACI,cAAC,EAAD,IACA,cAACmC,EAAD,UACI,cAACD,EAAD,CAAQK,QARA,WACGD,EAAT,SAAV5B,EAA4B,QAAoB,SAOxC,SACe,SAAVA,EAAmB,cAAC,EAAD,IAAuB,cAAC,EAAD,QAGnD,cAAC,EAAD,IACA,cAAC,EAAD,QC5BG8B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6528971e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avara.ebb7cb3e.woff\";","export default __webpack_public_path__ + \"static/media/avara.7eaf9527.woff2\";","import { createGlobalStyle } from \"styled-components\";\n\n// fonts\nimport avaraWoff from \"../assets/fonts/avara.woff\";\nimport avaraWoff2 from \"../assets/fonts/avara.woff2\";\n\nexport const lightTheme = {\n    background: \"#f0f0f0\",\n    textColor: \"#0f0f0f\",\n    heartToggle: \"../assets/theme-switcher/dark-theme-heart.gif\",\n    whoDis: \"../assets/new-website/light-theme.gif\",\n};\n\nexport const darkTheme = {\n    background: \"#0f0f0f\",\n    textColor: \"#f0f0f0\",\n    heartToggle: \"../assets/theme-switcher/light-theme-heart.gif\",\n    whoDis: \"../assets/new-website/dark-theme.gif\",\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: \"Avara\";\n    src: url(${avaraWoff2}) format(\"woff2\"),\n        url(${avaraWoff}) format(\"woff\");\n    font-weight: normal;\n    display: swap;\n  }\n\n    * {\n      --black: #0F0F0F;\n      --white: #F0F0F0;\n      --pink: #E838FF;\n      --transparentPink: #f0f8;\n      --transparentPurple: #00f8;\n      --purple: #6F38FF;\n    }\n\n    html {\n        margin: 0;\n        padding: 0;\n        height: 100%\n    }\n\n    body {\n        display: flex;\n\t      flex-direction: column;\n  \t    align-items: center;\n  \t    justify-content: center;\n        height: 100vh;\n        max-width: 100vw;\n\n  \t    text-align: center;\n        font-family: \"Avara\", serif;\n  \t    background: ${({ theme }) => theme.background};\n        color: ${({ theme }) => theme.textColor};\n        transition: all 0.25s linear;\n    }\n\n    ::selection {\n      background-color: var(--transparentPink);\n      color: ${({ theme }) => theme.textColor};\n      border-bottom: 2px solid var(--white);\n    }\n\n    ::-moz-selection {\n      background-color: var(--transparentPink);\n      color: ${({ theme }) => theme.textColor};\n      border-bottom: 2px solid var(--white);\n    }\n\n    @media screen and (max-width: 600px) {\n        img {\n          width: 95vw;\n        }\n    }\n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\n\nconst StyledA = styled.a`\n    color: var(--pink);\n    text-decoration: none;\n    border-bottom: 2px solid var(--purple);\n\n    :hover {\n        background: rgba(111, 56, 255, 0.5);\n        border-bottom: 0px;\n    }\n\n    :active {\n        background: var(--transparentPink);\n        transform: scale(1.075);\n    }\n`;\n\nconst Link = ({ link, name }) => {\n    return (\n        <StyledA\n            href={link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            alt={name}>\n            {name}\n        </StyledA>\n    );\n};\n\nexport default Link;\n","import Link from \"./Link\";\nimport styled from \"styled-components\";\n// useSound -\n// import useSound from \"use-sound\";\n// import boopSfx from \"../../sounds/boop.mp3\";\n\nconst Wrapper = styled.div`\n    padding: 1em;\n    word-break: break-word;\n    color: var(--purple);\n    font-size: 2em;\n    letter-spacing: 0.05em;\n    max-width: 500px;\n\n    @media (max-width: 768px) {\n        font-size: 1.5em;\n    }\n`;\n\nconst Content = () => {\n    return (\n        <Wrapper>\n            find me on <Link link=\"https://sirat.xyz/\" name=\"sirat.xyz\" /> which is coming real\n            soon! or you can just find me on <Link link=\"https://github.com/sBx99/\" name=\"github\" />{\" \"}\n            or <Link link=\"https://linkedin.com/in/siratbaweja/\" name=\"linkedin\" />\n        </Wrapper>\n    );\n};\n\nexport default Content;\n","export default __webpack_public_path__ + \"static/media/who-dis.73009366.gif\";","export default __webpack_public_path__ + \"static/media/light-theme-heart.627a54cf.gif\";","export default __webpack_public_path__ + \"static/media/dark-theme-heart.4d7241a2.gif\";","import whoDis from \"../assets/new-website/who-dis.gif\";\nimport lightHeart from \"../assets/theme-switcher/light-theme-heart.gif\";\nimport darkHeart from \"../assets/theme-switcher/dark-theme-heart.gif\";\n\nimport styled from \"styled-components\";\n\n// image styling\nconst StyledImg = styled.img`\n    filter: drop-shadow(0 0 15px var(--purple));\n`;\n\nexport const GifToggle = () => {\n    return <StyledImg src={whoDis} alt=\"new website who dis\" />;\n};\n\n// image styling\nconst StyledToggle = styled.img`\n    filter: drop-shadow(0 0 0.75em var(--purple));\n    width: 8em;\n`;\n\nexport const LightHeartToggle = () => {\n    return <StyledToggle src={lightHeart} alt=\"a gif of a white rotating heart\" width=\"100px\" />;\n};\n\nexport const DarkHeartToggle = () => {\n    return <StyledToggle src={darkHeart} alt=\"a gif of a black rotating heart\" width=\"100px\" />;\n};\n","// light - dark theme toggle -> https://css-tricks.com/a-dark-mode-toggle-with-react-and-themeprovider/\n\n// assets\nimport React, { useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\n\nimport GlobalStyle, { lightTheme, darkTheme } from \"./theme/themeConfig\";\nimport Content from \"./components/Content\";\nimport { GifToggle, LightHeartToggle, DarkHeartToggle } from \"./components/Images\";\n\n// Button\nconst Button = styled.div`\n    border: 1px solid rgba(0, 0, 0, 0);\n`;\n\n// fixed toggle\nconst FixToggle = styled.div`\n    position: fixed;\n    top: 1em;\n    left: 1em;\n    z-index: 10;\n`;\n\n// App\nconst App = () => {\n    const [theme, setTheme] = useState(\"dark\");\n\n    const toggleTheme = () => {\n        theme === \"dark\" ? setTheme(\"light\") : setTheme(\"dark\");\n    };\n\n    return (\n        <ThemeProvider theme={theme === \"dark\" ? darkTheme : lightTheme}>\n            <GlobalStyle />\n            <FixToggle>\n                <Button onClick={toggleTheme}>\n                    {theme === \"dark\" ? <LightHeartToggle /> : <DarkHeartToggle />}\n                </Button>\n            </FixToggle>\n            <GifToggle />\n            <Content />\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}